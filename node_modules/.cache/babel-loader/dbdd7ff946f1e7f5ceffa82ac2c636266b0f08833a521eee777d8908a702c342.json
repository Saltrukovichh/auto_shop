{"ast":null,"code":"var _jsxFileName = \"/Users/vladsaltrukovic/Desktop/shop copy/src/pages/ModelsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './ModelsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModelsPage() {\n  _s();\n  const {\n    brand\n  } = useParams(); // Извлечение параметра brand из URL\n  const [models, setModels] = useState([]);\n  const [brandName, setBrandName] = useState(\"\"); // Для хранения имени марки\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (brand) {\n      // Функция для загрузки данных о марке\n      const fetchBrandName = async () => {\n        try {\n          const response = await axios.get(`http://localhost:5001/api/brands/${brand}`);\n          setBrandName(response.data.name); // Устанавливаем имя марки\n        } catch (error) {\n          console.error(\"Ошибка при загрузке имени марки:\", error);\n          setError(\"Не удалось загрузить информацию о марке\");\n        }\n      };\n\n      // Функция для загрузки моделей\n      const fetchModels = async () => {\n        try {\n          const response = await axios.get(`http://localhost:5001/api/models?brandId=${brand}`);\n          setModels(response.data);\n        } catch (error) {\n          console.error(\"Ошибка при загрузке моделей:\", error);\n          setError(\"Не удалось загрузить модели\");\n        }\n      };\n      fetchBrandName();\n      fetchModels();\n    }\n  }, [brand]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"models-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: [\"\\u041C\\u043E\\u0434\\u0435\\u043B\\u0438 \\u043C\\u0430\\u0440\\u043A\\u0438 \", brandName || \"...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"polosa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"model-list\",\n      children: models.map((model, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/brand/${brand}/model/${model.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"model-item\",\n          children: model.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ModelsPage, \"vo07CUiHXZuEMXGPhaHwiZWa6JQ=\", false, function () {\n  return [useParams];\n});\n_c = ModelsPage;\nexport default ModelsPage;\nvar _c;\n$RefreshReg$(_c, \"ModelsPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","axios","jsxDEV","_jsxDEV","ModelsPage","_s","brand","models","setModels","brandName","setBrandName","error","setError","fetchBrandName","response","get","data","name","console","fetchModels","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","model","index","to","id","_c","$RefreshReg$"],"sources":["/Users/vladsaltrukovic/Desktop/shop copy/src/pages/ModelsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport './ModelsPage.css';\n\nfunction ModelsPage() {\n  const { brand } = useParams(); // Извлечение параметра brand из URL\n  const [models, setModels] = useState([]);\n  const [brandName, setBrandName] = useState(\"\"); // Для хранения имени марки\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (brand) {\n      // Функция для загрузки данных о марке\n      const fetchBrandName = async () => {\n        try {\n          const response = await axios.get(`http://localhost:5001/api/brands/${brand}`);\n          setBrandName(response.data.name); // Устанавливаем имя марки\n        } catch (error) {\n          console.error(\"Ошибка при загрузке имени марки:\", error);\n          setError(\"Не удалось загрузить информацию о марке\");\n        }\n      };\n\n      // Функция для загрузки моделей\n      const fetchModels = async () => {\n        try {\n          const response = await axios.get(`http://localhost:5001/api/models?brandId=${brand}`);\n          setModels(response.data);\n        } catch (error) {\n          console.error(\"Ошибка при загрузке моделей:\", error);\n          setError(\"Не удалось загрузить модели\");\n        }\n      };\n\n      fetchBrandName();\n      fetchModels();\n    }\n  }, [brand]);\n\n  return (\n    <div className=\"models-page\">\n      <h1 className=\"title\">Модели марки {brandName || \"...\"}</h1>\n      <hr className=\"polosa\" />\n      {error && <p className=\"error\">{error}</p>}\n      <div className=\"model-list\">\n        {models.map((model, index) => (\n          <Link to={`/brand/${brand}/model/${model.id}`} key={index}>\n            <div className=\"model-item\">{model.name}</div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default ModelsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}